@page "/Team/Create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TournamentManager.Common.Enums
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager;


<div id="content">
    <div class="container-fluid">
        <div class="row mb-3">
            <div class="col d-flex align-items-center">
                <h3 class="text-primary">New Team</h3>
            </div>
            <div class="col col-auto"><a href="Team/List" class="btn btn-light">Back to All Teams</a></div>
        </div>
        @if (_displayError)
        {
            <div class="row">
                <div class="col">
                    <MessageBox MessageType="MessageType.Error" Title="An error has occured" Message="@_errorMessage"/>
                </div>
            </div>
        }
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <EditForm Model="@_team" OnValidSubmit="@HandleValidSubmit">
                                    <DataAnnotationsValidator/>
                                    <ValidationSummary/>
                                    <div class="mb-2">
                                        <label class="form-label w-100" for="teamName">Name</label>
                                        <InputText id="teamName" class="form-control" type="text" @bind-Value="_team.Name"/>
                                    </div>
                                    <div class="mb-2">

                                        @if (_team.LogoUrl is null)
                                        {
                                            <img class="pb-0" width="100" src="/assets/img/logo_placeholder.jpg" alt="Team Logo"/>
                                        }
                                        else
                                        {
                                            <img class="pb-0" width="100" src="@_team.LogoUrl" alt="Team Logo"/>
                                        }
                                    </div>
                                    <div class="mb-2">
                                        <label class="form-label w-100" for="logo">Logo</label>
                                        <InputText id="logo" type="url" @bind-Value="_team.LogoUrl"/>
                                    </div>
                                    <div class="d-flex justify-content-center"><button class="btn btn-primary" type="submit">Create</button></div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private TeamModel _team = TeamModel.Empty;
    private UserModel? _currentUser;
    
    private bool _displayError;
    private string _errorMessage = string.Empty;

    private async void HandleValidSubmit()
    {
        try
        {
            _currentUser = await Http.GetFromJsonAsync<UserModel>("api/User/current");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

        if (_currentUser is null)
        {
            NavigationManager.NavigateToLogin("/authentication/login");
            return;
        }
        _team.LeaderId = _currentUser.Id;
        var response = await Http.PutAsJsonAsync<TeamModel>("/api/Team", _team);
        if (!response.IsSuccessStatusCode)
        {
            _errorMessage = await response.Content.ReadAsStringAsync();
            _displayError = true;
        }
        else
        {
            NavigationManager.NavigateTo("/Team/List");
        }

    }
}
