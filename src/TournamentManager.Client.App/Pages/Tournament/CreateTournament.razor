@page "/Tournament/Create"
@using TournamentManager.Common.Models
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>Create Tournament</PageTitle>



<div class="row mb-3">
    <div class="col d-xl-flex d-flex align-items-center">
        <h3 class="text-dark d-xl-flex">New Tournament</h3>
    </div>
    <div class="col col-auto"><a href="/Tournament/List"><button class="btn btn-light" type="button">Back to All Tournaments</button></a></div>
</div>
<div class="row w-75">
    <div class="col">
        <div class="card m-2">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        <form>
                            <div class="mb-2"><label class="form-label" for="name">Name</label><input id="name" name="name" class="form-control" type="text" @bind="_tournamentName"></div>
                            <div class="mb-2"><label class="form-label" for="description" @bind="_tournamentDescription">Description</label><textarea id="description" name="description" class="form-control"></textarea></div>
                            <div class="mb-2"><label class="form-label" for="date" @bind="_tournamentDate">Date of beginning</label><input id="date" name="date" class="form-control" type="date"></div>
                            <div class="mb-2"><label class="form-label" for="sport">Sport</label>
                                <select id="sport" name="sport" class="form-select">
                                    <option value="12" selected>This is item 1</option>
                                    <option value="13">This is item 2</option>
                                    <option value="14">This is item 3</option>
                                </select>
                                </div>
                            <div class="mb-2"><label class="form-label" for="signup-type">Play mode</label>
                                <select id="signup-type" name="signup-type" class="form-select">
                                    <option value="12" selected>Individual</option>
                                    <option value="13">Teams</option>
                                </select>
                                </div>
                            <div class="mb-2"><label class="form-label" for="max-players">Maximum number of players</label><input id="max-players" name="max-players" class="form-control" min="1" type="number" style="width: 30%;"></div>
                            <div class="mb-2">
                                <div class="form-check"><input class="form-check-input" type="checkbox" id="formCheck-1"><label class="form-check-label" for="formCheck-1">Public</label></div>
                            </div>
                            <div class="d-xl-flex justify-content-xl-end"><button class="btn btn-pribmary text-end d-xl-flex" type="button" @onclick="Test">Create</button></div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private string? _tournamentName;
    private string? _tournamentDescription;
    private DateTime _tournamentDate;
    private int _maxNumberOfPlayers = 0;
    private bool _isPublic = false;

    private async void Test()
    {
        var newTournament = new TournamentModel(
            _tournamentName ?? throw new NotImplementedException(),
            _tournamentDate,
            _isPublic,
            false,
            _maxNumberOfPlayers,
            Guid.NewGuid(),
            (await Http.GetFromJsonAsync<UserModel>("api/User/current"))?.Id ?? throw new NotImplementedException(),
            _tournamentDescription
            ); // TODO Handle nulls

        await Http.PutAsJsonAsync("api/Tournament", newTournament);
    }

}
